name: lint, test, publish charts

on:
  pull_request:
    paths:
      - "helm/charts/**"

jobs:
  changed:
    runs-on: [self-hosted, shared]
    outputs:
      charts: ${{ steps.list-changed.outputs.changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.7.2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.1.0
      - name: Run chart-testing (list-changed)
        id: list-changed
        env:
          CT_DEBUG: "false"
        run: |
          changed=$(ct list-changed --config .github/ct.yaml)
          if [[ -n "$changed" ]]; then
          echo -n "Charts changed:"
          echo "$changed"
          echo "::set-output name=changed::$changed"
          else
          echo "PR without any chart changes - failing"
          exit 1
          fi

  lint-chart:
    runs-on: [self-hosted, shared]
    needs:
      - changed
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.1.0
      - name: Run chart-testing (lint)
        run: ct lint --config .github/ct.yaml

  lint-docs:
    runs-on: [self-hosted, shared]
    needs:
      - changed
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Run helm-docs
        run: |
          #!/bin/bash
          set -euo pipefail

          HELM_DOCS_VERSION="1.7.0"
          OS=$(uname)

          # install helm-docs
          curl --silent --show-error --fail --location --output /tmp/helm-docs.tar.gz https://github.com/norwoodj/helm-docs/releases/download/v"${HELM_DOCS_VERSION}"/helm-docs_"${HELM_DOCS_VERSION}"_${OS}_x86_64.tar.gz
          tar -xf /tmp/helm-docs.tar.gz helm-docs

          # validate docs
          ./helm-docs
          git diff --exit-code

  kubeconform-chart:
    runs-on: [self-hosted, shared]
    needs:
      - changed
    strategy:
      matrix:
        k8s:
          - v1.21.2
          - v1.22.4
          - v1.23.0
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Run kubeconform
        env:
          KUBERNETES_VERSION: ${{ matrix.k8s }}
          CHANGED_CHARTS: ${{needs.changed.outputs.charts}}
        run: |
          #!/bin/bash
          set -euo pipefail

          KUBECONFORM_VERSION="v0.4.12"
          OS=$(uname)

          CHANGED_CHARTS=${CHANGED_CHARTS:-${1:-}}
          if [ -n "$CHANGED_CHARTS" ];
          then
            CHART_DIRS=$CHANGED_CHARTS
          else
            CHART_DIRS=$(ls -d charts/*)
          fi

          # install kubeconform
          curl --silent --show-error --fail --location --output /tmp/kubeconform.tar.gz https://github.com/yannh/kubeconform/releases/download/"${KUBECONFORM_VERSION}"/kubeconform-${OS}-amd64.tar.gz
          tar -xf /tmp/kubeconform.tar.gz kubeconform

          # validate charts
          for CHART_DIR in ${CHART_DIRS}; do
            echo "Running kubeconform for folder: '$CHART_DIR'"
            helm dep up "${CHART_DIR}" &&
            helm template --kube-version "${KUBERNETES_VERSION#v}" "${CHART_DIR}" |
            ./kubeconform --strict --ignore-missing-schemas --kubernetes-version "${KUBERNETES_VERSION#v}" -summary -verbose
          done

  publish-chartmuseum-dev:
    name: publish-chartmuseum-dev
    environment: dev
    runs-on: [self-hosted, shared]
    needs:
      - kubeconform-chart
      - changed
      - lint-chart
      - lint-docs
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Add chartmuseum-dev helm repo
        run: |
          if ! helm plugin list | grep -q push; then
            helm plugin install https://github.com/chartmuseum/helm-push.git
          fi
          helm repo add chartmuseum-dev --username ${{ secrets.CHARTMUSEUM_USER }} --password ${{ secrets.CHARTMUSEUM_PASSWORD }} ${{ secrets.CHARTMUSEUM_URL }} &&
          helm repo update
      - name: Push chart to chartmuseum-dev repo
        env:
          CHANGED_CHARTS: ${{needs.changed.outputs.charts}}
        run: helm cm-push -f $CHANGED_CHARTS chartmuseum-dev

  pr-validated:
    name: pr-validated
    runs-on: [self-hosted, shared]
    needs:
      - publish-chartmuseum-dev
    steps:
      - name: validate
        run: echo "PR OK"
